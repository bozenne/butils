% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/descriptiveTable.R
\name{descriptiveTable}
\alias{descriptiveTable}
\title{Descriptive Table for Continuous, Categorical, and Date Variables}
\usage{
descriptiveTable(formula, data, guess.categorical = 5,
  add.groupAll = TRUE, add.groupNA = TRUE, add.groupVariable = FALSE,
  FCT.center = "mean", FCT.spread = "sd", test.categorical = NULL,
  test.continuous = NULL)
}
\arguments{
\item{formula}{[formula] A formula where the left hand side (lhs) describe potential subgroups
and the right hand side (rhs) the variable to be described.}

\item{data}{[data.frame/data.table] Dataset}

\item{guess.categorical}{[integer,>0] When the type of the variables is not specified, numeric variables with
number of unique values lower than the specified value are treated as categorical variabels.}

\item{add.groupAll}{[logical] should the descriptives of the whole dataset be computed?}

\item{add.groupNA}{[logical] should the descriptives of the observations where the group variable is missing be computed?}

\item{add.groupVariable}{[logical] should the name of the variable used to generate the sub-groups be printed in the table.}

\item{FCT.center}{[function] function used to assess the center of the distribution.}

\item{FCT.spread}{[function] function used to assess the spread of the distribution.}

\item{test.categorical}{[function] function used to compute the p-value when comparing the categorical outcomes across sub-groups.}

\item{test.continuous}{[function] function used to compute the p-value when comparing the continuous outcomes across sub-groups.}
}
\description{
Descriptive table for continuous, categorical, and date variables.
}
\examples{
data(veteran, package = "survival")

descriptiveTable( ~ celltype + time + status +karno,
                 data = veteran)
descriptiveTable(trt ~ celltype + time + status +karno,
                 data = veteran)
tt <- descriptiveTable(trt ~ celltype + time + status +karno,
                       data = veteran, test.continuous = t.test)
}
