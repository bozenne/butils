% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggSurv.R
\name{ggSurv}
\alias{ggSurv}
\alias{ggSurv.survfit}
\alias{ggSurv.coxph}
\alias{ggSurv.data.table}
\title{Survival curve using ggplot2}
\usage{
ggSurv(object, ...)

\method{ggSurv}{survfit}(object, ...)

\method{ggSurv}{coxph}(object, data = NULL, newdata = NULL,
  confint = FALSE, ...)

\method{ggSurv}{data.table}(object, format = "data.table",
  var.time = "time", var.survival = "survival", var.ci.inf = NULL,
  var.ci.sup = NULL, var.event = NULL, var.censor = NULL,
  var.strata = NULL, plot = TRUE, legend.position = "top", title = NULL,
  text.size = NULL, ylim = NULL, line.size = 2, confint = FALSE,
  alpha.CIfill = 0.2, alpha.CIline = 0.5, censoring = FALSE,
  alpha.censoring = 1, colour.censoring = rgb(0.2, 0.2, 0.2),
  shape.censoring = 3, size.censoring = 2, name.censoring = "censoring",
  events = FALSE, alpha.events = 1, colour.events = rgb(0.2, 0.2, 0.2),
  shape.events = 8, size.events = 2, name.events = "event", ...)
}
\arguments{
\item{object}{a coxph object or a survfit object or a data.table object.}

\item{...}{arguments to be passed to lower level functions}

\item{data}{the data that have been used to fit the model.}

\item{newdata}{dataset containing the covariates conditional to which the survival is displayed.}

\item{confint, alpha.CIfill, alpha.CIline}{how to display confidence intervals}

\item{format}{the format used to export the data. Can be data.table or data.frame.}

\item{var.time}{the name of the column in the data.table object containing the time variable}

\item{var.survival}{the name of the column in the data.table object containing the survival at each time}

\item{var.ci.inf}{the name of the column in the data.table object containing the lower bound of the confidence interval}

\item{var.ci.sup}{the name of the column in the data.table object containing the upper bound of the confidence interval}

\item{var.event}{the name of the column in the data.table object containing the number of events at each time}

\item{var.censor}{the name of the column in the data.table object containing the number of censored patients at each time}

\item{var.strata}{the name of the column in the data.table object containing the strata variable}

\item{plot}{should the plot be displayed}

\item{legend.position, title, text.size}{annotations on the plot}

\item{ylim}{y range (survival)}

\item{line.size}{size of the survival curves}

\item{censoring, alpha.censoring, colour.censoring, shape.censoring, size.censoring, name.censoring}{how to display censored events}

\item{events, alpha.events, colour.events, shape.events, size.events, name.events}{how to display non-censored events}
}
\value{
A list:
\itemize{
  \item plot: the ggplot object
  \item data: the data used to create the ggplot object
}
}
\description{
Display a non-parametric or semi-parametric survival curve.
}
\examples{
library(lava)
library(survival)

set.seed(10)
n <- 100
newdata <- data.frame(X1=1)
time <- 0.25

## simulate non proportional hazard using lava
m <- lvm()
regression(m) <- y ~ 1
regression(m) <- s ~ exp(-2*X1)
distribution(m,~X1) <- binomial.lvm()
distribution(m,~cens) <- coxWeibull.lvm(scale=1)
distribution(m,~y) <- coxWeibull.lvm(scale=1,shape=~s)
eventTime(m) <- eventtime ~ min(y=1,cens=0)
d <- as.data.table(lava::sim(m,n))
setkey(d, eventtime)

## Cox (PH)
m.cox <- coxph(Surv(eventtime, status) ~ X1, data = d, y = TRUE, x = TRUE)
res1 <- ggSurv(m.cox)
ggSurv(m.cox, newdata = d[,.SD[1], by = X1])
ggSurv(m.cox, newdata = d[,.SD[1], by = X1], confint = TRUE)

## Cox (stratified)
mStrata.cox <- coxph(Surv(eventtime, status) ~ strata(X1), data = d, y = TRUE, x = TRUE)
ggSurv(mStrata.cox, censoring = TRUE, event = TRUE)

## KM
m.KM <- survfit(Surv(eventtime, status) ~ X1, data = d)
res2 <- ggSurv(m.KM)

## combine plot
dt.gg <- rbind(cbind(res1$data[original == TRUE & X1 == 1], model = "cox"),
               cbind(res2$data[original == TRUE & X1 == 1], model = "KM")
)
dt.gg[,c("X1","original") := NULL]
ggSurv(dt.gg, var.time = "time", var.survival = "survival", var.strata = "model")

}
