% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/WaldTest.R
\name{WaldTest}
\alias{WaldTest}
\alias{WaldTest.gls}
\alias{WaldTest.lme}
\title{Testing independent linear hypotheses using a Wald test}
\usage{
WaldTest(object, ...)

\method{WaldTest}{gls}(object, C, b = rep(0, NROW(C)), df = NULL, ...)

\method{WaldTest}{lme}(object, C, b = rep(0, NROW(C)), df = NULL, ...)
}
\arguments{
\item{object}{a model. Currently only support \code{lme} objects.}

\item{...}{not used.}

\item{C}{a contrast matrix.
Number of rows is the number of hypotheses.
Number of columns should match the number of coefficients in the model.}

\item{b}{a vector such that the hypothesis to test is: \eqn{C * \beta = b} where \eqn{\beta} are the model coefficients.}

\item{df}{[optional] the degree of freedom associated to the variance of each coefficient.}
}
\description{
Use a contrast matrix to test several linear hypotheses on the coefficients using a Wald test.
The hypotheses are assumed to be independent of each other.
}
\details{
Denoting \eqn{\beta} the estimated model coefficients,
\eqn{Sigma} their estimated variance covariance matrix,
and \eqn{t()} the transpose operator, this function computes:
\deqn{Cb = C * \beta}
\deqn{CSC = C * \Sigma * t(C)}
\deqn{t = \sqrt{Cb/diag(CSC)}}

and compute the p.value using the Gaussian distribution (\code{df=NULL}) or a student's t-distribution.
In such a case the degrees of freedom are computed using:
\deqn{Cdf = C * df}
This formula is probably a very crude approximation to the appropriate degrees of freedom of \eqn{diage(CSC)} (assuming they exists).
}
\examples{
library(nlme)

## gls
fm1 <- gls(follicles ~ sin(2*pi*Time) + cos(2*pi*Time), Ovary,
               correlation = corAR1(form = ~ 1 | Mare))

name.coef <- names(coef(fm1))
n.coef <- length(name.coef)
C <- matrix(0, nrow = n.coef, ncol = n.coef,
            dimnames = list(name.coef, name.coef))
diag(C) <- 1
WaldTest(fm1, C)
summary(fm1)$tTable

## lme
fm2 <- lme(distance ~ age + Sex, data = Orthodont, random = ~ 1)

name.coef <- names(coef(fm2))
n.coef <- length(name.coef)
C <- matrix(0, nrow = n.coef, ncol = n.coef,
            dimnames = list(name.coef, name.coef))
diag(C) <- 1
WaldTest(fm2, C)
summary(fm2)$tTable

}
